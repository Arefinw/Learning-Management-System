{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    // Implement API call for registration\n    // const response = await authService.register(user);\n    // return response.data;\n    return {\n      message: 'Registration successful (mock)'\n    };\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n// Login user\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    // Implement API call for login\n    // const response = await authService.login(user);\n    // return response.data;\n    return {\n      message: 'Login successful (mock)'\n    };\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user; // Assuming payload has user object\n      state.token = action.payload.token; // Assuming payload has token\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user; // Assuming payload has user object\n      state.token = action.payload.token; // Assuming payload has token\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","register","user","thunkAPI","message","error","rejectWithValue","login","authSlice","name","initialState","token","isAuthenticated","isLoading","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Register user\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (user, thunkAPI) => {\n    try {\n      // Implement API call for registration\n      // const response = await authService.register(user);\n      // return response.data;\n      return { message: 'Registration successful (mock)' };\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// Login user\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (user, thunkAPI) => {\n    try {\n      // Implement API call for login\n      // const response = await authService.login(user);\n      // return response.data;\n      return { message: 'Login successful (mock)' };\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    isLoading: false,\n    error: null,\n  },\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload.user; // Assuming payload has user object\n        state.token = action.payload.token; // Assuming payload has token\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload.user; // Assuming payload has user object\n        state.token = action.payload.token; // Assuming payload has token\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,QAAQ,GAAGD,gBAAgB,CACtC,eAAe,EACf,OAAOE,IAAI,EAAEC,QAAQ,KAAK;EACxB,IAAI;IACF;IACA;IACA;IACA,OAAO;MAAEC,OAAO,EAAE;IAAiC,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAACD,OAAO,CAAC;EAChD;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,KAAK,GAAGP,gBAAgB,CACnC,YAAY,EACZ,OAAOE,IAAI,EAAEC,QAAQ,KAAK;EACxB,IAAI;IACF;IACA;IACA;IACA,OAAO;MAAEC,OAAO,EAAE;IAA0B,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAACD,OAAO,CAAC;EAChD;AACF,CACF,CAAC;AAED,MAAMI,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZR,IAAI,EAAE,IAAI;IACVS,KAAK,EAAE,IAAI;IACXC,eAAe,EAAE,KAAK;IACtBC,SAAS,EAAE,KAAK;IAChBR,KAAK,EAAE;EACT,CAAC;EACDS,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACd,IAAI,GAAG,IAAI;MACjBc,KAAK,CAACL,KAAK,GAAG,IAAI;MAClBK,KAAK,CAACJ,eAAe,GAAG,KAAK;IAC/B;EACF,CAAC;EACDK,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,QAAQ,CAACmB,OAAO,EAAGJ,KAAK,IAAK;MACpCA,KAAK,CAACH,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDM,OAAO,CAAClB,QAAQ,CAACoB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACJ,eAAe,GAAG,IAAI;MAC5BI,KAAK,CAACd,IAAI,GAAGoB,MAAM,CAACC,OAAO,CAACrB,IAAI,CAAC,CAAC;MAClCc,KAAK,CAACL,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACZ,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CACDQ,OAAO,CAAClB,QAAQ,CAACuB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC7CN,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACX,KAAK,GAAGiB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDJ,OAAO,CAACZ,KAAK,CAACa,OAAO,EAAGJ,KAAK,IAAK;MACjCA,KAAK,CAACH,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDM,OAAO,CAACZ,KAAK,CAACc,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC3CN,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACJ,eAAe,GAAG,IAAI;MAC5BI,KAAK,CAACd,IAAI,GAAGoB,MAAM,CAACC,OAAO,CAACrB,IAAI,CAAC,CAAC;MAClCc,KAAK,CAACL,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACZ,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CACDQ,OAAO,CAACZ,KAAK,CAACiB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC1CN,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACX,KAAK,GAAGiB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAO,CAAC,GAAGP,SAAS,CAACiB,OAAO;AAC3C,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}