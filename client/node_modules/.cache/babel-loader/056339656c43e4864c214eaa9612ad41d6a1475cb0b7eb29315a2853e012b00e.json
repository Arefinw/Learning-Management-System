{"ast":null,"code":"var _jsxFileName = \"/Users/aunogarafat/Downloads/Learning Management System/client/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../features/auth/authSlice';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * @description Login page component. Allows users to log in with their email and password.\n * Dispatches the login action and redirects to the home page on successful login.\n * @returns {JSX.Element} - The login form.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    user,\n    isLoading,\n    error\n  } = useSelector(state => state.auth);\n  const onChange = e => {\n    setFormData(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email,\n      password\n    };\n    dispatch(login(userData));\n  };\n\n  // Redirect if logged in\n  useEffect(() => {\n    if (user) {\n      navigate('/');\n    }\n  }, [user, navigate]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this); // Replace with a proper spinner\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        placeholder: \"Enter your email\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        placeholder: \"Enter password\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"bk6qx+Z3UMQknB3rMTdWGeAabfU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","login","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","email","password","dispatch","navigate","user","isLoading","error","state","auth","onChange","e","prevState","target","name","value","onSubmit","preventDefault","userData","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../features/auth/authSlice';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * @description Login page component. Allows users to log in with their email and password.\n * Dispatches the login action and redirects to the home page on successful login.\n * @returns {JSX.Element} - The login form.\n */\nconst LoginPage = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { user, isLoading, error } = useSelector((state) => state.auth);\n\n  const onChange = (e) => {\n    setFormData((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const userData = {\n      email,\n      password,\n    };\n\n    dispatch(login(userData));\n  };\n\n  // Redirect if logged in\n  useEffect(() => {\n    if (user) {\n      navigate('/');\n    }\n  }, [user, navigate]);\n\n  if (isLoading) {\n    return <h2>Loading...</h2>; // Replace with a proper spinner\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Enter your email\"\n          onChange={onChange}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"Enter password\"\n          onChange={onChange}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}