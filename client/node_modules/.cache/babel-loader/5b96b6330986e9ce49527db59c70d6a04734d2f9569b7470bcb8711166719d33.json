{"ast":null,"code":"/**\n * @fileoverview This file defines the Redux slice for authentication.\n * @description It handles user registration, login, and logout, managing authentication state.\n */\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user.user : null,\n  token: user ? user.token : null,\n  isAuthenticated: user ? true : false,\n  isLoading: false,\n  error: null\n};\n\n/**\n * @description Registers a new user.\n * @param {object} user - The user data (name, email, password).\n * @param {object} thunkAPI - The Redux Thunk API object.\n * @returns {Promise<object>} - The response data from the registration API call.\n */\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    const response = await authService.register(user);\n    return response;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n/**\n * @description Logs in an existing user.\n * @param {object} user - The user credentials (email, password).\n * @param {object} thunkAPI - The Redux Thunk API object.\n * @returns {Promise<object>} - The response data from the login API call.\n */\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    const response = await authService.login(user);\n    return response;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n/**\n * @description Logs out the current user.\n * @returns {Promise<void>}\n */\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    /**\n     * @description Resets the authentication state.\n     * @param {object} state - The current state of the auth slice.\n     */\n    reset: state => {\n      state.isLoading = false;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","token","isAuthenticated","isLoading","error","register","thunkAPI","response","message","data","toString","rejectWithValue","login","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/features/auth/authSlice.js"],"sourcesContent":["/**\n * @fileoverview This file defines the Redux slice for authentication.\n * @description It handles user registration, login, and logout, managing authentication state.\n */\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\n\nconst initialState = {\n  user: user ? user.user : null,\n  token: user ? user.token : null,\n  isAuthenticated: user ? true : false,\n  isLoading: false,\n  error: null,\n};\n\n/**\n * @description Registers a new user.\n * @param {object} user - The user data (name, email, password).\n * @param {object} thunkAPI - The Redux Thunk API object.\n * @returns {Promise<object>} - The response data from the registration API call.\n */\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (user, thunkAPI) => {\n    try {\n      const response = await authService.register(user);\n      return response;\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\n/**\n * @description Logs in an existing user.\n * @param {object} user - The user credentials (email, password).\n * @param {object} thunkAPI - The Redux Thunk API object.\n * @returns {Promise<object>} - The response data from the login API call.\n */\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (user, thunkAPI) => {\n    try {\n      const response = await authService.login(user);\n      return response;\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\n/**\n * @description Logs out the current user.\n * @returns {Promise<void>}\n */\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    /**\n     * @description Resets the authentication state.\n     * @param {object} state - The current state of the auth slice.\n     */\n    reset: (state) => {\n      state.isLoading = false;\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n      })\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n      });\n  },\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}