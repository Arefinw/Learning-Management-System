{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{fetchProjectsByWorkspace}from'./projectSlice';/**\n * @description Fetches and displays the entire nested folder structure for a given workspace.\n * Highlights the current project and invokes a callback when a folder is clicked.\n * @param {object} props - Component props.\n * @param {string} props.workspaceId - The ID of the workspace to display the folder tree for.\n * @param {string} props.currentProjectId - The ID of the currently selected project.\n * @param {function} props.onProjectSelect - Callback function invoked when a project is selected.\n * @returns {JSX.Element} - The folder tree component.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FolderTree=_ref=>{let{workspaceId,currentProjectId,onProjectSelect}=_ref;const dispatch=useDispatch();const{projects,status,error}=useSelector(state=>state.project);useEffect(()=>{if(workspaceId){dispatch(fetchProjectsByWorkspace(workspaceId));}},[workspaceId,dispatch]);const renderFolder=folder=>/*#__PURE__*/_jsxs(\"li\",{className:`p-2 rounded ${folder._id===currentProjectId?'font-bold bg-gray-200':''}`,children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>onProjectSelect(folder._id),className:\"cursor-pointer\",children:folder.name}),projects.filter(f=>f.parent===folder._id).length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"pl-4 mt-2 space-y-2\",children:projects.filter(f=>f.parent===folder._id).map(renderFolder)})]},folder._id);if(status==='loading'){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading folder tree...\"});}if(status==='failed'){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-semibold mb-3\",children:[\"Folder Tree (Workspace: \",workspaceId,\")\"]}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:projects.filter(f=>f.parent===null).map(renderFolder)})]});};export default FolderTree;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchProjectsByWorkspace","jsx","_jsx","jsxs","_jsxs","FolderTree","_ref","workspaceId","currentProjectId","onProjectSelect","dispatch","projects","status","error","state","project","renderFolder","folder","className","_id","children","onClick","name","filter","f","parent","length","map"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/features/project/FolderTree.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjectsByWorkspace } from './projectSlice';\n\n/**\n * @description Fetches and displays the entire nested folder structure for a given workspace.\n * Highlights the current project and invokes a callback when a folder is clicked.\n * @param {object} props - Component props.\n * @param {string} props.workspaceId - The ID of the workspace to display the folder tree for.\n * @param {string} props.currentProjectId - The ID of the currently selected project.\n * @param {function} props.onProjectSelect - Callback function invoked when a project is selected.\n * @returns {JSX.Element} - The folder tree component.\n */\nconst FolderTree = ({ workspaceId, currentProjectId, onProjectSelect }) => {\n  const dispatch = useDispatch();\n  const { projects, status, error } = useSelector((state) => state.project);\n\n  useEffect(() => {\n    if (workspaceId) {\n      dispatch(fetchProjectsByWorkspace(workspaceId));\n    }\n  }, [workspaceId, dispatch]);\n\n  const renderFolder = (folder) => (\n    <li key={folder._id} className={`p-2 rounded ${folder._id === currentProjectId ? 'font-bold bg-gray-200' : ''}`}>\n      <span onClick={() => onProjectSelect(folder._id)} className=\"cursor-pointer\">{folder.name}</span>\n      {projects.filter(f => f.parent === folder._id).length > 0 && (\n        <ul className=\"pl-4 mt-2 space-y-2\">\n          {projects.filter(f => f.parent === folder._id).map(renderFolder)}\n        </ul>\n      )}\n    </li>\n  );\n\n  if (status === 'loading') {\n    return <div>Loading folder tree...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-xl font-semibold mb-3\">Folder Tree (Workspace: {workspaceId})</h3>\n      <ul className=\"space-y-2\">\n        {projects.filter(f => f.parent === null).map(renderFolder)}\n      </ul>\n    </div>\n  );\n};\n\nexport default FolderTree;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,wBAAwB,KAAQ,gBAAgB,CAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBASA,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAwD,IAAvD,CAAEC,WAAW,CAAEC,gBAAgB,CAAEC,eAAgB,CAAC,CAAAH,IAAA,CACpE,KAAM,CAAAI,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEa,QAAQ,CAAEC,MAAM,CAAEC,KAAM,CAAC,CAAGd,WAAW,CAAEe,KAAK,EAAKA,KAAK,CAACC,OAAO,CAAC,CAEzElB,SAAS,CAAC,IAAM,CACd,GAAIU,WAAW,CAAE,CACfG,QAAQ,CAACV,wBAAwB,CAACO,WAAW,CAAC,CAAC,CACjD,CACF,CAAC,CAAE,CAACA,WAAW,CAAEG,QAAQ,CAAC,CAAC,CAE3B,KAAM,CAAAM,YAAY,CAAIC,MAAM,eAC1Bb,KAAA,OAAqBc,SAAS,CAAE,eAAeD,MAAM,CAACE,GAAG,GAAKX,gBAAgB,CAAG,uBAAuB,CAAG,EAAE,EAAG,CAAAY,QAAA,eAC9GlB,IAAA,SAAMmB,OAAO,CAAEA,CAAA,GAAMZ,eAAe,CAACQ,MAAM,CAACE,GAAG,CAAE,CAACD,SAAS,CAAC,gBAAgB,CAAAE,QAAA,CAAEH,MAAM,CAACK,IAAI,CAAO,CAAC,CAChGX,QAAQ,CAACY,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,MAAM,GAAKR,MAAM,CAACE,GAAG,CAAC,CAACO,MAAM,CAAG,CAAC,eACvDxB,IAAA,OAAIgB,SAAS,CAAC,qBAAqB,CAAAE,QAAA,CAChCT,QAAQ,CAACY,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,MAAM,GAAKR,MAAM,CAACE,GAAG,CAAC,CAACQ,GAAG,CAACX,YAAY,CAAC,CAC9D,CACL,GANMC,MAAM,CAACE,GAOZ,CACL,CAED,GAAIP,MAAM,GAAK,SAAS,CAAE,CACxB,mBAAOV,IAAA,QAAAkB,QAAA,CAAK,wBAAsB,CAAK,CAAC,CAC1C,CAEA,GAAIR,MAAM,GAAK,QAAQ,CAAE,CACvB,mBAAOR,KAAA,QAAAgB,QAAA,EAAK,SAAO,CAACP,KAAK,EAAM,CAAC,CAClC,CAEA,mBACET,KAAA,QAAAgB,QAAA,eACEhB,KAAA,OAAIc,SAAS,CAAC,4BAA4B,CAAAE,QAAA,EAAC,0BAAwB,CAACb,WAAW,CAAC,GAAC,EAAI,CAAC,cACtFL,IAAA,OAAIgB,SAAS,CAAC,WAAW,CAAAE,QAAA,CACtBT,QAAQ,CAACY,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,MAAM,GAAK,IAAI,CAAC,CAACE,GAAG,CAACX,YAAY,CAAC,CACxD,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}