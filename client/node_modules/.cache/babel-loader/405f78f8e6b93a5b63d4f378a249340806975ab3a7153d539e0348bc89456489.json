{"ast":null,"code":"var _jsxFileName = \"/Users/aunogarafat/Downloads/Learning Management System/client/src/pages/ProjectViewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjectById } from '../features/project/projectSlice';\nimport FolderTree from '../features/project/FolderTree';\nimport PathwayList from '../features/pathway/PathwayList';\nimport { fetchPathwaysByProject } from '../features/pathway/pathwaySlice';\n\n/**\n * @description Main page for viewing a project (folder). Fetches project data based on the URL parameter.\n * Renders the FolderTree and PathwayList components.\n * @returns {JSX.Element} - The project view page.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectViewPage = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    currentProject,\n    status,\n    error\n  } = useSelector(state => state.project);\n  const {\n    pathways,\n    status: pathwayStatus,\n    error: pathwayError\n  } = useSelector(state => state.pathway);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (projectId) {\n      dispatch(fetchProjectById(projectId));\n    }\n  }, [projectId, dispatch]);\n  useEffect(() => {\n    if (currentProject && currentProject._id) {\n      dispatch(fetchPathwaysByProject(currentProject._id));\n    }\n  }, [currentProject, dispatch]);\n  useEffect(() => {\n    if (user && user.defaultWorkspace) {\n      dispatch(fetchProjectsByWorkspace(user.defaultWorkspace));\n    }\n  }, [user, dispatch]);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project View Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), currentProject && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Project: \", currentProject.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30%',\n          borderRight: '1px solid #ccc'\n        },\n        children: /*#__PURE__*/_jsxDEV(FolderTree, {\n          workspaceId: \"mockWorkspaceId123\" // Mock workspace ID\n          ,\n          currentProjectId: projectId,\n          onProjectSelect: id => console.log('Project selected:', id) // Placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70%',\n          paddingLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(PathwayList, {\n          pathways: []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectViewPage, \"LAbwolx1sZKrurxx1/S69JRhQGw=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n_c = ProjectViewPage;\nexport default ProjectViewPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectViewPage\");","map":{"version":3,"names":["React","useEffect","useParams","useDispatch","useSelector","fetchProjectById","FolderTree","PathwayList","fetchPathwaysByProject","jsxDEV","_jsxDEV","ProjectViewPage","_s","projectId","dispatch","currentProject","status","error","state","project","pathways","pathwayStatus","pathwayError","pathway","user","auth","_id","defaultWorkspace","fetchProjectsByWorkspace","children","fileName","_jsxFileName","lineNumber","columnNumber","name","style","display","width","borderRight","workspaceId","currentProjectId","onProjectSelect","id","console","log","paddingLeft","_c","$RefreshReg$"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/pages/ProjectViewPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjectById } from '../features/project/projectSlice';\nimport FolderTree from '../features/project/FolderTree';\nimport PathwayList from '../features/pathway/PathwayList';\nimport { fetchPathwaysByProject } from '../features/pathway/pathwaySlice';\n\n/**\n * @description Main page for viewing a project (folder). Fetches project data based on the URL parameter.\n * Renders the FolderTree and PathwayList components.\n * @returns {JSX.Element} - The project view page.\n */\nconst ProjectViewPage = () => {\n  const { projectId } = useParams();\n  const dispatch = useDispatch();\n  const { currentProject, status, error } = useSelector((state) => state.project);\n  const { pathways, status: pathwayStatus, error: pathwayError } = useSelector((state) => state.pathway);\n  const { user } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (projectId) {\n      dispatch(fetchProjectById(projectId));\n    }\n  }, [projectId, dispatch]);\n\n  useEffect(() => {\n    if (currentProject && currentProject._id) {\n      dispatch(fetchPathwaysByProject(currentProject._id));\n    }\n  }, [currentProject, dispatch]);\n\n  useEffect(() => {\n    if (user && user.defaultWorkspace) {\n      dispatch(fetchProjectsByWorkspace(user.defaultWorkspace));\n    }\n  }, [user, dispatch]);\n\n  if (status === 'loading') {\n    return <div>Loading projects...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Project View Page</h1>\n      {currentProject && <h2>Current Project: {currentProject.name}</h2>}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '30%', borderRight: '1px solid #ccc' }}>\n          <FolderTree\n            workspaceId=\"mockWorkspaceId123\" // Mock workspace ID\n            currentProjectId={projectId}\n            onProjectSelect={(id) => console.log('Project selected:', id)} // Placeholder\n          />\n        </div>\n        <div style={{ width: '70%', paddingLeft: '20px' }}>\n          {/* PathwayList will be populated with pathways from the current project */}\n          <PathwayList pathways={[]} /> {/* Placeholder */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectViewPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}