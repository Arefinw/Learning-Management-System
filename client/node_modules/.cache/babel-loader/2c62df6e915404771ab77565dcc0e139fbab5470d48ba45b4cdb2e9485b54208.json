{"ast":null,"code":"import React from'react';import{useSelector}from'react-redux';import{Navigate}from'react-router-dom';/**\n * @description A wrapper component that checks if the user is authenticated.\n * If authenticated, it renders the children components. Otherwise, it redirects to the login page.\n * @param {object} { children } - React children to be rendered if authenticated.\n * @returns {JSX.Element} - Rendered children or a Navigate component for redirection.\n */import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{user}=useSelector(state=>state.auth);if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","useSelector","Navigate","jsx","_jsx","ProtectedRoute","_ref","children","user","state","auth","to","replace"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/routes/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\n/**\n * @description A wrapper component that checks if the user is authenticated.\n * If authenticated, it renders the children components. Otherwise, it redirects to the login page.\n * @param {object} { children } - React children to be rendered if authenticated.\n * @returns {JSX.Element} - Rendered children or a Navigate component for redirection.\n */\nconst ProtectedRoute = ({ children }) => {\n  const { user } = useSelector((state) => state.auth);\n\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,QAAQ,KAAQ,kBAAkB,CAE3C;AACA;AACA;AACA;AACA;AACA,GALA,OAAAC,GAAA,IAAAC,IAAA,yBAMA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,IAAK,CAAC,CAAGP,WAAW,CAAEQ,KAAK,EAAKA,KAAK,CAACC,IAAI,CAAC,CAEnD,GAAI,CAACF,IAAI,CAAE,CACT,mBAAOJ,IAAA,CAACF,QAAQ,EAACS,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}