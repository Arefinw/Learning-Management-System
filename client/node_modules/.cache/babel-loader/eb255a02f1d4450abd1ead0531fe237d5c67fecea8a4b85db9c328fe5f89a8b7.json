{"ast":null,"code":"var _jsxFileName = \"/Users/aunogarafat/Downloads/Learning Management System/client/src/routes/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\n/**\n * @description A wrapper component that checks if the user is authenticated.\n * If authenticated, it renders the children components. Otherwise, it redirects to the login page.\n * @param {object} { children } - React children to be rendered if authenticated.\n * @returns {JSX.Element} - Rendered children or a Navigate component for redirection.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useSelector","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","state","auth","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/routes/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\n/**\n * @description A wrapper component that checks if the user is authenticated.\n * If authenticated, it renders the children components. Otherwise, it redirects to the login page.\n * @param {object} { children } - React children to be rendered if authenticated.\n * @returns {JSX.Element} - Rendered children or a Navigate component for redirection.\n */\nconst ProtectedRoute = ({ children }) => {\n  const { user } = useSelector((state) => state.auth);\n\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAK,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEnD,IAAI,CAACF,IAAI,EAAE;IACT,oBAAOJ,OAAA,CAACF,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,OAAOV,QAAQ;AACjB,CAAC;AAACC,EAAA,CARIF,cAAc;EAAA,QACDJ,WAAW;AAAA;AAAAgB,EAAA,GADxBZ,cAAc;AAUpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}