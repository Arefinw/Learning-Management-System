{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/users/';\n\n/**\n * @description Registers a user and sets the user data in local storage.\n * @param {object} userData - The user data (name, email, password).\n * @returns {object} - The user data and token.\n */\nconst register = async userData => {\n  const response = await axios.post(API_URL + 'register', userData);\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n/**\n * @description Logs in a user and sets the user data in local storage.\n * @param {object} userData - The user data (email, password).\n * @returns {object} - The user data and token.\n */\nconst login = async userData => {\n  const response = await axios.post(API_URL + 'login', userData);\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n/**\n * @description Logs out the current user by removing user data from local storage.\n * @returns {void}\n */\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst authService = {\n  register,\n  logout,\n  login\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","localStorage","setItem","JSON","stringify","login","logout","removeItem","authService"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/features/auth/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api/users/';\n\n/**\n * @description Registers a user and sets the user data in local storage.\n * @param {object} userData - The user data (name, email, password).\n * @returns {object} - The user data and token.\n */\nconst register = async (userData) => {\n  const response = await axios.post(API_URL + 'register', userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n\n  return response.data;\n};\n\n/**\n * @description Logs in a user and sets the user data in local storage.\n * @param {object} userData - The user data (email, password).\n * @returns {object} - The user data and token.\n */\nconst login = async (userData) => {\n  const response = await axios.post(API_URL + 'login', userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n\n  return response.data;\n};\n\n/**\n * @description Logs out the current user by removing user data from local storage.\n * @returns {void}\n */\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst authService = {\n  register,\n  logout,\n  login,\n};\n\nexport default authService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,aAAa;;AAE7B;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACnC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,UAAU,EAAEE,QAAQ,CAAC;EAEjE,IAAIC,QAAQ,CAACE,IAAI,EAAE;IACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7D;EAEA,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMK,KAAK,GAAG,MAAOR,QAAQ,IAAK;EAChC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,OAAO,EAAEE,QAAQ,CAAC;EAE9D,IAAIC,QAAQ,CAACE,IAAI,EAAE;IACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7D;EAEA,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMM,MAAM,GAAGA,CAAA,KAAM;EACnBL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,MAAMC,WAAW,GAAG;EAClBZ,QAAQ;EACRU,MAAM;EACND;AACF,CAAC;AAED,eAAeG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}