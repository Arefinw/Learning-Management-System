{"ast":null,"code":"var _jsxFileName = \"/Users/aunogarafat/Downloads/Learning Management System/client/src/features/project/FolderTree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjectsByWorkspace } from './projectSlice';\n\n/**\n * @description Fetches and displays the entire nested folder structure for a given workspace.\n * Highlights the current project and invokes a callback when a folder is clicked.\n * @param {object} props - Component props.\n * @param {string} props.workspaceId - The ID of the workspace to display the folder tree for.\n * @param {string} props.currentProjectId - The ID of the currently selected project.\n * @param {function} props.onProjectSelect - Callback function invoked when a project is selected.\n * @returns {JSX.Element} - The folder tree component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderTree = ({\n  workspaceId,\n  currentProjectId,\n  onProjectSelect\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    projects,\n    status,\n    error\n  } = useSelector(state => state.project);\n  useEffect(() => {\n    if (workspaceId) {\n      dispatch(fetchProjectsByWorkspace(workspaceId));\n    }\n  }, [workspaceId, dispatch]);\n  const renderFolder = folder => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `list-group-item ${folder._id === currentProjectId ? 'active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => onProjectSelect(folder._id),\n      style: {\n        cursor: 'pointer'\n      },\n      children: folder.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), projects.filter(f => f.parent === folder._id).length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group list-group-flush ps-3\",\n      children: projects.filter(f => f.parent === folder._id).map(renderFolder)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, folder._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading folder tree...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mb-3\",\n      children: [\"Folder Tree (Workspace: \", workspaceId, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group list-group-flush\",\n      children: projects.filter(f => f.parent === null).map(renderFolder)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(FolderTree, \"nbuEfUGVhMoJZKZZH9fgE8Wli6U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FolderTree;\nexport default FolderTree;\nvar _c;\n$RefreshReg$(_c, \"FolderTree\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchProjectsByWorkspace","jsxDEV","_jsxDEV","FolderTree","workspaceId","currentProjectId","onProjectSelect","_s","dispatch","projects","status","error","state","project","renderFolder","folder","className","_id","children","onClick","style","cursor","name","fileName","_jsxFileName","lineNumber","columnNumber","filter","f","parent","length","map","_c","$RefreshReg$"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/features/project/FolderTree.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjectsByWorkspace } from './projectSlice';\n\n/**\n * @description Fetches and displays the entire nested folder structure for a given workspace.\n * Highlights the current project and invokes a callback when a folder is clicked.\n * @param {object} props - Component props.\n * @param {string} props.workspaceId - The ID of the workspace to display the folder tree for.\n * @param {string} props.currentProjectId - The ID of the currently selected project.\n * @param {function} props.onProjectSelect - Callback function invoked when a project is selected.\n * @returns {JSX.Element} - The folder tree component.\n */\nconst FolderTree = ({ workspaceId, currentProjectId, onProjectSelect }) => {\n  const dispatch = useDispatch();\n  const { projects, status, error } = useSelector((state) => state.project);\n\n  useEffect(() => {\n    if (workspaceId) {\n      dispatch(fetchProjectsByWorkspace(workspaceId));\n    }\n  }, [workspaceId, dispatch]);\n\n  const renderFolder = (folder) => (\n    <li key={folder._id} className={`list-group-item ${folder._id === currentProjectId ? 'active' : ''}`}>\n      <span onClick={() => onProjectSelect(folder._id)} style={{ cursor: 'pointer' }}>{folder.name}</span>\n      {projects.filter(f => f.parent === folder._id).length > 0 && (\n        <ul className=\"list-group list-group-flush ps-3\">\n          {projects.filter(f => f.parent === folder._id).map(renderFolder)}\n        </ul>\n      )}\n    </li>\n  );\n\n  if (status === 'loading') {\n    return <div>Loading folder tree...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h3 className=\"mb-3\">Folder Tree (Workspace: {workspaceId})</h3>\n      <ul className=\"list-group list-group-flush\">\n        {projects.filter(f => f.parent === null).map(renderFolder)}\n      </ul>\n    </div>\n  );\n};\n\nexport default FolderTree;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}