{"ast":null,"code":"import axios from'axios';const API_URL='/api/users/';/**\n * @description Registers a user and sets the user data in local storage.\n * @param {object} userData - The user data (name, email, password).\n * @returns {object} - The user data and token.\n */const register=async userData=>{const response=await axios.post(API_URL+'register',userData);if(response.data){localStorage.setItem('user',JSON.stringify(response.data));}return response.data;};/**\n * @description Logs in a user and sets the user data in local storage.\n * @param {object} userData - The user data (email, password).\n * @returns {object} - The user data and token.\n */const login=async userData=>{const response=await axios.post(API_URL+'login',userData);if(response.data){localStorage.setItem('user',JSON.stringify(response.data));}return response.data;};/**\n * @description Logs out the current user by removing user data from local storage.\n * @returns {void}\n */const logout=()=>{localStorage.removeItem('user');};const authService={register,logout,login};export default authService;","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","localStorage","setItem","JSON","stringify","login","logout","removeItem","authService"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/features/auth/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api/users/';\n\n/**\n * @description Registers a user and sets the user data in local storage.\n * @param {object} userData - The user data (name, email, password).\n * @returns {object} - The user data and token.\n */\nconst register = async (userData) => {\n  const response = await axios.post(API_URL + 'register', userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n\n  return response.data;\n};\n\n/**\n * @description Logs in a user and sets the user data in local storage.\n * @param {object} userData - The user data (email, password).\n * @returns {object} - The user data and token.\n */\nconst login = async (userData) => {\n  const response = await axios.post(API_URL + 'login', userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n\n  return response.data;\n};\n\n/**\n * @description Logs out the current user by removing user data from local storage.\n * @returns {void}\n */\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst authService = {\n  register,\n  logout,\n  login,\n};\n\nexport default authService;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,aAAa,CAE7B;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAACJ,OAAO,CAAG,UAAU,CAAEE,QAAQ,CAAC,CAEjE,GAAIC,QAAQ,CAACE,IAAI,CAAE,CACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC7D,CAEA,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAK,KAAK,CAAG,KAAO,CAAAR,QAAQ,EAAK,CAChC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAACJ,OAAO,CAAG,OAAO,CAAEE,QAAQ,CAAC,CAE9D,GAAIC,QAAQ,CAACE,IAAI,CAAE,CACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC7D,CAEA,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA;AACA;AACA,GACA,KAAM,CAAAM,MAAM,CAAGA,CAAA,GAAM,CACnBL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,CAClBZ,QAAQ,CACRU,MAAM,CACND,KACF,CAAC,CAED,cAAe,CAAAG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}