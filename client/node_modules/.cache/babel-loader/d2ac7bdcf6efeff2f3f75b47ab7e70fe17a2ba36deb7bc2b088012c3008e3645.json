{"ast":null,"code":"var _jsxFileName = \"/Users/aunogarafat/Downloads/Learning Management System/client/src/pages/ProjectViewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjectById } from '../features/project/projectSlice';\nimport FolderTree from '../features/project/FolderTree';\nimport PathwayList from '../features/pathway/PathwayList';\n\n/**\n * @description Main page for viewing a project (folder). Fetches project data based on the URL parameter.\n * Renders the FolderTree and PathwayList components.\n * @returns {JSX.Element} - The project view page.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectViewPage = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    currentProject,\n    status,\n    error\n  } = useSelector(state => state.project);\n  useEffect(() => {\n    if (projectId) {\n      dispatch(fetchProjectById(projectId));\n    }\n  }, [projectId, dispatch]);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project View Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), currentProject && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Project: \", currentProject.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30%',\n          borderRight: '1px solid #ccc'\n        },\n        children: /*#__PURE__*/_jsxDEV(FolderTree, {\n          workspaceId: \"mockWorkspaceId123\" // Mock workspace ID\n          ,\n          currentProjectId: projectId,\n          onProjectSelect: id => console.log('Project selected:', id) // Placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70%',\n          paddingLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(PathwayList, {\n          pathways: []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectViewPage, \"3w5LrD1l2BvSFcEIV3pk5YnrtjA=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = ProjectViewPage;\nexport default ProjectViewPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectViewPage\");","map":{"version":3,"names":["React","useEffect","useParams","useDispatch","useSelector","fetchProjectById","FolderTree","PathwayList","jsxDEV","_jsxDEV","ProjectViewPage","_s","projectId","dispatch","currentProject","status","error","state","project","children","fileName","_jsxFileName","lineNumber","columnNumber","name","style","display","width","borderRight","workspaceId","currentProjectId","onProjectSelect","id","console","log","paddingLeft","pathways","_c","$RefreshReg$"],"sources":["/Users/aunogarafat/Downloads/Learning Management System/client/src/pages/ProjectViewPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjectById } from '../features/project/projectSlice';\nimport FolderTree from '../features/project/FolderTree';\nimport PathwayList from '../features/pathway/PathwayList';\n\n/**\n * @description Main page for viewing a project (folder). Fetches project data based on the URL parameter.\n * Renders the FolderTree and PathwayList components.\n * @returns {JSX.Element} - The project view page.\n */\nconst ProjectViewPage = () => {\n  const { projectId } = useParams();\n  const dispatch = useDispatch();\n  const { currentProject, status, error } = useSelector((state) => state.project);\n\n  useEffect(() => {\n    if (projectId) {\n      dispatch(fetchProjectById(projectId));\n    }\n  }, [projectId, dispatch]);\n\n  if (status === 'loading') {\n    return <div>Loading projects...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Project View Page</h1>\n      {currentProject && <h2>Current Project: {currentProject.name}</h2>}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '30%', borderRight: '1px solid #ccc' }}>\n          <FolderTree\n            workspaceId=\"mockWorkspaceId123\" // Mock workspace ID\n            currentProjectId={projectId}\n            onProjectSelect={(id) => console.log('Project selected:', id)} // Placeholder\n          />\n        </div>\n        <div style={{ width: '70%', paddingLeft: '20px' }}>\n          {/* PathwayList will be populated with pathways from the current project */}\n          <PathwayList pathways={[]} /> {/* Placeholder */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectViewPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}